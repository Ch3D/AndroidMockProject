// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    ext.versions = [supportLib            : '24.0.0',
                    rxJava                : '1.1.5',
                    retrofit              : '2.1.0',
                    rxAndroid             : '1.2.0',
                    picasso               : '2.5.2',
                    picassoOkHttp3        : '1.0.2',
                    okhttp                : '3.2.0', // TODO update once fixed with robolectric https://github.com/square/okhttp/issues/2533
                    crashlytics           : '2.5.6@aar',
                    scribe                : '1.3.7',
                    recyclerAnimators     : '2.2.0',
                    eventBus              : '2.4.0',
                    butterKnife           : '7.0.1',
                    roundImage            : '1.5.0',
                    calligraphy           : '2.1.0',
                    stickyHeaders         : '0.4.2@aar',
                    cropImage             : '1.1.0',

                    dexmaker              : '1.4',
                    supportTestUiAutomator: '2.1.2',

                    junit                 : '4.12',
                    mockito               : '1.10.19',
                    powerMock             : '1.6.5',
                    robolectric           : '3.1-rc1',
                    espresso              : '2.2.2',
                    supportTest           : '0.5']

    ext {

        minSdk = 21
        targetSdk = 23
        compileSdk = 23
        buildTools = "23.0.3"

        versionName = "0.1.0"
        versionCode = 1

        libs = [supportAppCompat      : "com.android.support:appcompat-v7:$versions.supportLib",
                supportRecyclerView   : "com.android.support:recyclerview-v7:$versions.supportLib",
                supportCardView       : "com.android.support:cardview-v7:$versions.supportLib",
                supportAnnotations    : "com.android.support:support-annotations:$versions.supportLib",
                supportDesign         : "com.android.support:design:$versions.supportLib",
                rxJava                : "io.reactivex:rxjava:$versions.rxJava",
                rxAndroid             : "io.reactivex:rxandroid:$versions.rxAndroid",
                retrofit              : "com.squareup.retrofit2:retrofit:$versions.retrofit",
                retrofitRxJava        : "com.squareup.retrofit2:adapter-rxjava:$versions.retrofit",
                okhttp                : "com.squareup.okhttp3:okhttp:$versions.okhttp",
                picasso               : "com.squareup.picasso:picasso:$versions.picasso",
                picassoOkHttp3        : "com.jakewharton.picasso:picasso2-okhttp3-downloader:$versions.picassoOkHttp3",
                crashlytics           : "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics",
                scribe                : "org.scribe:scribe:$versions.scribe",
                recyclerAnimators     : "jp.wasabeef:recyclerview-animators:$versions.recyclerAnimators",
                eventBus              : "de.greenrobot:eventbus:$versions.eventBus",
                butterKnife           : "com.jakewharton:butterknife:$versions.butterKnife",
                roundImage            : "com.makeramen:roundedimageview:$versions.roundImage",
                calligraphy           : "uk.co.chrisjenx:calligraphy:$versions.calligraphy",
                stickyHeaders         : "com.timehop.stickyheadersrecyclerview:library:$versions.stickyHeaders",
                cropImage             : "me.villani.lorenzo.android:android-cropimage:$versions.cropImage",

                dexmaker              : "com.crittercism.dexmaker:dexmaker:$versions.dexmaker",
                dexmakerDx            : "com.crittercism.dexmaker:dexmaker-dx:$versions.dexmaker",
                dexmakerMockito       : "com.crittercism.dexmaker:dexmaker-mockito:$versions.dexmaker",

                junit                 : "junit:junit:$versions.junit",
                mockito               : "org.mockito:mockito-core:$versions.mockito",
                powerMock             : "org.powermock:powermock-api-mockito:$versions.powerMock",
                powerMockJunit        : "org.powermock:powermock-module-junit4:$versions.powerMock",
                robolectric           : "org.robolectric:robolectric:$versions.robolectric",
                supportTestUiAutomator: "com.android.support.test.uiautomator:uiautomator-v18:$versions.supportTestUiAutomator",
                supportTestRunner     : "com.android.support.test:runner:$versions.supportTest",
                supportTestRules      : "com.android.support.test:rules:$versions.supportTest",
                espresso              : "com.android.support.test.espresso:espresso-core:$versions.espresso",
                espressoContrib       : "com.android.support.test.espresso:espresso-contrib:$versions.espresso"]
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.0'
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.5.0'
    }
}

allprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            println "Disable pre dexing for module ${project.name}"
            project.android.dexOptions.preDexLibraries = false
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            println "Disable pre dexing for module ${project.name}"
            project.android.dexOptions.preDexLibraries = false
        }
    }

    repositories {
        jcenter()
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap'
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }

        maven { url 'https://maven.fabric.io/public' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
